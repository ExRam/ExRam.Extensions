<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{23485A01-FEC7-496E-8FEA-83DF3687F638}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ExRam.Extensions</RootNamespace>
    <AssemblyName>ExRam.Extensions</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile78</TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;CONTRACTS_FULL</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>True</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>True</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>False</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>True</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;CONTRACTS_FULL</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>True</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>True</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>False</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>True</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Preconditions</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>2</CodeContractsAnalysisWarningLevel>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>ExRam.Extensions.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="System\Collections\Generic\DictionaryExtensions.cs" />
    <Compile Include="System\Collections\Generic\ListExtensions.cs" />
    <Compile Include="System\ExceptionExtensions.cs" />
    <Compile Include="System\IO\StreamExtensions.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28StateScan%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28Concat%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28DefaultIfEmpty%29.cs" />
    <Compile Include="System\Linq\EnumerableExtensions.cs" />
    <Compile Include="System\MaybeExtensions.cs" />
    <Compile Include="System\Maybe.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Where%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28TakeWhileInclusivel%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28RepeatWhileEmpty%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Morph%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28UsingWhile%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Concat%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28DefaultIfEmpty%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28SelectAsync%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Forever%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28TryFirstAsync%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Current%29.cs" />
    <Compile Include="System\Reactive\Subjects\ConnectableObservable.cs" />
    <Compile Include="System\Reactive\Subjects\ConnectableObservableExtensions %28ConnectTotallyAtMost%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28SubscribeConcurrentlyAtMost%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28SubscribeTotallyAtMost%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ScanWithLeadingSeed%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ToConnectableObservable%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28CatchOnCancellation%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ThrowOnCancellation%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28TakeUntil%29.cs" />
    <Compile Include="System\Reactive\Subjects\ConnectableObservableExtensions %28DisconnectTotallyAtMost%29.cs" />
    <Compile Include="System\Reactive\Subjects\ConnectableObservableExtensions %28ConnectAndForget%29.cs" />
    <Compile Include="System\Reactive\Subjects\NullableBehaviorSubject.cs" />
    <Compile Include="System\Reflection\AssemblyExtensions.cs" />
    <Compile Include="System\Text\EncodingExtensions.cs" />
    <Compile Include="System\Threading\CancellationTokenExtensions.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28SelectAsync%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28AsAsyncEnumerable%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskFactoryExtensions.cs" />
    <Compile Include="System\Maybe %28Of T%29.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28Append%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28Create%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28Dematerialize%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28Gate%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28KeepOpen%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28Materialize%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28ScanAsync%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28SelectAsync%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28SelectValueWhereAvailable%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28ToStream%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28TryFirst%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28TryWithTimeout%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerableExtensions %28WhereNotNull%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerator %28Create%29.cs" />
    <Compile Include="System\Linq\AsyncEnumerator.cs" />
    <Compile Include="System\Reactive\Counting.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Box%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28Catch%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28CombineLatest%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28GroupByUntil%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28KeepOpen%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28OnCompletion%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28OnCompletionOrError%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ScanAsync%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ScanDefer%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28StateScan%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28SubscribeUsing%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ToCounting%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ToGroup%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ToNotifyCollectionChangedEventPattern%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28ToWeakObservable%29.cs" />
    <Compile Include="System\Reactive\Linq\ObservableExtensions %28WhereNotNull%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskCompletionSourceExtensions %28WithCancellation%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskCompletionSourceExtensions.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28Ignore%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28Select%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28Swallow%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28ToAsyncEnumerable%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28TryWithCancellation%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28TryWithTimeout%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28WithAsyncCallback%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28WithCancellation%29.cs" />
    <Compile Include="System\Threading\Tasks\TaskExtensions %28WithTimeout%29.cs" />
    <Compile Include="System\TimeSpanExtensions.cs" />
    <Reference Include="System.Interactive.Async">
      <HintPath>..\packages\Ix-Async.1.2.3\lib\portable-net45+netcore45+wpa81+wp8+MonoAndroid1+MonoTouch1\System.Interactive.Async.dll</HintPath>
    </Reference>
    <Reference Include="System.Reactive.Core">
      <HintPath>..\packages\Rx-Core.2.2.5\lib\portable-windows8+net45+wp8\System.Reactive.Core.dll</HintPath>
    </Reference>
    <Reference Include="System.Reactive.Interfaces">
      <HintPath>..\packages\Rx-Interfaces.2.2.5\lib\portable-windows8+net45+wp8\System.Reactive.Interfaces.dll</HintPath>
    </Reference>
    <Reference Include="System.Reactive.Linq">
      <HintPath>..\packages\Rx-Linq.2.2.5\lib\portable-windows8+net45+wp8\System.Reactive.Linq.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="ExRam.Extensions.snk" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>